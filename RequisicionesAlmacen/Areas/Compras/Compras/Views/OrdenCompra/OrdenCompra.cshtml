@using RequisicionesAlmacen.Areas.Compras.Compras.Models.ViewModel
@using RequisicionesAlmacenBL.Entities
@using RequisicionesAlmacenBL.Models.Mapeos
@model OrdenCompraViewModel
@using Newtonsoft.Json;

<link href="~/Content/Site.css" rel="stylesheet" />

@Html.Partial("_HeaderLayout", new ViewDataDictionary { { "NombreFicha", "Orden de Compra" }, { "Accion", Model.OrdenCompra.OrdenCompraId > 0 ? Model.SoloLectura ? "Ver" : "Editar" : "Nuevo" }, { "Icono", "icon ion-clipboard" } })
<div class="br-pagebody">
    <div class="br-section-wrapper">
        @using (Html.BeginForm())
        {
            using (Html.DevExtreme().ValidationGroup("dxValidationGroup"))
            {
                @Html.AntiForgeryToken();

                @(Html.DevExtreme().Form<tblOrdenCompra>()
                    .ID("dxForm")
                    .FormData(Model.OrdenCompra)
                    .LabelLocation(FormLabelLocation.Top)
                    .RequiredMark("(*)")
                    .Items(
                        items =>
                        {
                            items.AddGroup().ColCount(12).Items(
                                itemGroup =>
                                {
                                    itemGroup.AddSimple()
                                        .Label(label => label.Text("Datos Generales").ShowColon(false))
                                        .ColSpan(12)
                                        .CssClass("h6 br-section-label");
                                }
                            );

                            items.AddGroup().ColCount(12).Items(
                                itemGroup0 =>
                                {
                                    itemGroup0.AddGroup().ColSpan(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddGroup().ColCount(12).Items(
                                                itemGroup2 =>
                                                {
                                                    itemGroup2.AddSimpleFor(m => m.OrdenCompraId)
                                                        .ColSpan(2)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.TextBox()
                                                            .ID("dxTxtOrdenCompra")
                                                            .ReadOnly(true));

                                                    itemGroup2.AddSimpleFor(m => m.ProveedorId)
                                                        .ColSpan(5)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.SelectBox()
                                                            .ID("dxCboProveedor")
                                                            .DataSource(Model.ListProveedores)
                                                            .ValueExpr("ProveedorId")
                                                            .DisplayExpr("RazonSocial")
                                                            .SearchEnabled(true)
                                                            .SearchMode(DropDownSearchMode.Contains)
                                                            .NoDataText("Sin registros que mostrar")
                                                            .Placeholder("Selecciona una opción")
                                                            .OnValueChanged("cboProveedorChange")
                                                            .ReadOnly(Model.OrdenCompra.OrdenCompraId > 0));

                                                    itemGroup2.AddSimpleFor(m => m.AlmacenId)
                                                        .ColSpan(5)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.SelectBox()
                                                            .ID("dxCboAlmacen")
                                                            .DataSource(Model.ListAlmacenes)
                                                            .ValueExpr("AlmacenId")
                                                            .DisplayExpr("Nombre")
                                                            .SearchEnabled(true)
                                                            .SearchMode(DropDownSearchMode.Contains)
                                                            .NoDataText("Sin registros que mostrar")
                                                            .Placeholder("Selecciona una opción")
                                                            .OnValueChanged("cboAlmacenChange")
                                                            .ReadOnly(Model.OrdenCompra.OrdenCompraId > 0));

                                                    itemGroup2.AddSimpleFor(m => m.Estatus)
                                                        .ColSpan(2)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.TextBox()
                                                            .ID("dxTxtEstatus")
                                                            .ReadOnly(true));

                                                    itemGroup2.AddSimpleFor(m => m.TipoOperacionId)
                                                        .ColSpan(5)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.SelectBox()
                                                            .ID("dxCboTipoOperacion")
                                                            .DataSource(Model.ListTiposOperacion)
                                                            .ValueExpr("TipoOperacionId")
                                                            .DisplayExpr(new JS("(params) => {return params ? params.TipoOperacionId + ' - ' + params.Descripcion : null}"))
                                                            .SearchEnabled(true)
                                                            .SearchMode(DropDownSearchMode.Contains)
                                                            .NoDataText("Sin registros que mostrar")
                                                            .Placeholder("")
                                                            .ReadOnly(true));

                                                    itemGroup2.AddSimpleFor(m => m.TipoComprobanteFiscalId)
                                                        .ColSpan(5)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.SelectBox()
                                                            .ID("dxCboTipoComprobanteFiscal")
                                                            .DataSource(Model.ListTiposComprobanteFiscal)
                                                            .ValueExpr("TipoComprobanteFiscalId")
                                                            .DisplayExpr(new JS("(params) => {return params ? params.TipoComprobanteFiscalId + ' - ' + params.Nombre : null}"))
                                                            .SearchEnabled(true)
                                                            .SearchMode(DropDownSearchMode.Contains)
                                                            .NoDataText("Sin registros que mostrar")
                                                            .Placeholder("")
                                                            .ReadOnly(true));

                                                    itemGroup2.AddSimpleFor(m => m.Fecha)
                                                        .ColSpan(4)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.DateBox()
                                                            .ID("dxTxtFecha")
                                                            .DisplayFormat("dd/MM/yyyy")
                                                            .OnValueChanged("setCambios")
                                                            .ReadOnly(Model.SoloLectura || !Model.OrdenCompra.Status.Equals(ControlMaestroMapeo.EstatusOrdenCompra.ACTIVA)));

                                                    itemGroup2.AddSimpleFor(m => m.FechaRecepcion)
                                                        .ColSpan(4)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.DateBox()
                                                            .ID("dxTxtFechaRecepcion")
                                                            .DisplayFormat("dd/MM/yyyy")
                                                            .OnValueChanged("setCambios")
                                                            .ReadOnly(Model.SoloLectura || !Model.OrdenCompra.Status.Equals(ControlMaestroMapeo.EstatusOrdenCompra.ACTIVA)));

                                                    itemGroup2.AddSimpleFor(m => m.FechaRecepcion)
                                                        .Label(l => l.Text("Fecha Vencimiento"))
                                                        .ColSpan(4)
                                                        .CssClass("tx-bold")
                                                        .Editor(e => e.DateBox()
                                                            .ID("dxTxtFechaVencimiento")
                                                            .DisplayFormat("dd/MM/yyyy")
                                                            .OnValueChanged("setCambios")
                                                            .ReadOnly(true));

                                                    itemGroup2.AddSimpleFor(m => m.Referencia)
                                                        .ColSpan(2)
                                                        .Editor(e => e.TextBox()
                                                            .ID("dxTxtReferencia")
                                                            .MaxLength(25)
                                                            .OnValueChanged("setCambios")
                                                            .ReadOnly(Model.SoloLectura || !Model.OrdenCompra.Status.Equals(ControlMaestroMapeo.EstatusOrdenCompra.ACTIVA)));

                                                    itemGroup2.AddSimpleFor(m => m.Observacion)
                                                        .ColSpan(10)
                                                        .Editor(e => e.TextBox()
                                                            .ID("dxTxtObservacion")
                                                            .MaxLength(1000)
                                                            .OnValueChanged("setCambios")
                                                            .ReadOnly(Model.SoloLectura || !Model.OrdenCompra.Status.Equals(ControlMaestroMapeo.EstatusOrdenCompra.ACTIVA)));
                                                }
                                            );
                                        }
                                    );
                                }
                            ).CssClass("form-layout form-layout-1");

                            items.AddGroup().ColCount(12).Items(
                                itemGroup =>
                                {
                                    itemGroup.AddSimple()
                                        .HelpText("")
                                        .ColSpan(12)
                                        .CssClass("h6 br-section-label");
                                }
                            );

                            items.AddGroup().ColCount(12).Items(
                                itemGroup =>
                                {
                                    itemGroup.AddSimple()
                                        .Label(label => label.Text("Datos Financiamiento").ShowColon(false))
                                        .ColSpan(12)
                                        .CssClass("h6 br-section-label");
                                }
                            );

                            items.AddGroup().ColCount(12).Items(
                                itemGroup0 =>
                                {
                                    itemGroup0.AddGroup().ColSpan(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddGroup().ColCount(12).Items(
                                                itemGroup2 =>
                                                {
                                                    itemGroup2.AddSimpleFor(m => m.UnidadAdministrativaId)
                                                        .ColSpan(4)
                                                        .Editor(e => e.SelectBox()
                                                            .ID("dxCboUnidadAdministrativa")
                                                            .DataSource(Model.ListUnidadesAdministrativas)
                                                            .ValueExpr("DependenciaId")
                                                            .DisplayExpr(new JS("(params) => {return params ? params.DependenciaId + ' - ' + params.Nombre : null}"))
                                                            .SearchEnabled(true)
                                                            .SearchMode(DropDownSearchMode.Contains)
                                                            .NoDataText("Sin registros que mostrar")
                                                            .Placeholder(Model.OrdenCompra.OrdenCompraId == 0 ? "Selecciona una opción" : "")
                                                            .OnValueChanged("cboUnidadAdministrativaChange")
                                                            .ReadOnly(Model.OrdenCompra.OrdenCompraId > 0));

                                                    itemGroup2.AddSimpleFor(m => m.ProyectoId)
                                                        .ColSpan(4)
                                                        .Editor(e => e.SelectBox()
                                                            .ID("dxCboProyecto")
                                                            .DataSource(Model.ListProyectos)
                                                            .ValueExpr("ProyectoId")
                                                            .DisplayExpr(new JS("(params) => {return params ? params.ProyectoId + ' - ' + params.Nombre : null}"))
                                                            .SearchEnabled(true)
                                                            .SearchMode(DropDownSearchMode.Contains)
                                                            .NoDataText("Sin registros que mostrar")
                                                            .Placeholder(Model.OrdenCompra.OrdenCompraId == 0 ? "Selecciona una opción" : "")
                                                            .OnValueChanged("cboProyectoChange")
                                                            .ReadOnly(Model.OrdenCompra.OrdenCompraId > 0));

                                                    itemGroup2.AddSimpleFor(m => m.FuenteFinanciamientoId)
                                                        .ColSpan(4)
                                                        .Editor(e => e.SelectBox()
                                                            .ID("dxCboFuenteFinanciamiento")
                                                            .DataSource(Model.ListFuentesFinanciamiento)
                                                            .ValueExpr("RamoId")
                                                            .DisplayExpr(new JS("(params) => {return params ? params.RamoId + ' - ' + params.Nombre : null}"))
                                                            .SearchEnabled(true)
                                                            .SearchMode(DropDownSearchMode.Contains)
                                                            .NoDataText("Sin registros que mostrar")
                                                            .Placeholder(Model.OrdenCompra.OrdenCompraId == 0 ? "Selecciona una opción" : "")
                                                            .OnValueChanged("cboFuenteFinanciamientoChange")
                                                            .ReadOnly(Model.OrdenCompra.OrdenCompraId > 0));

                                                    itemGroup2.AddSimpleFor(m => m.Ajuste)
                                                        .Label(l => l.Location(FormLabelLocation.Left).ShowColon(false))
                                                        .Editor(e => e.CheckBox()
                                                            .ID("dxChkAjuste")
                                                            .OnValueChanged("chkAjusteChange")
                                                            .ReadOnly(Model.SoloLectura || !Model.OrdenCompra.Status.Equals(ControlMaestroMapeo.EstatusOrdenCompra.ACTIVA)));
                                                }
                                            );
                                        }
                                    );
                                }
                            ).CssClass("form-layout form-layout-1");

                            items.AddGroup().ColCount(12).Items(
                                itemGroup =>
                                {
                                    itemGroup.AddSimple()
                                        .HelpText("")
                                        .ColSpan(12)
                                        .CssClass("h6 br-section-label");
                                }
                            );

                            items.AddGroup().ColCount(12).Items(
                                itemGroup =>
                                {
                                    itemGroup.AddSimple()
                                        .Label(label => label.Text("Artículos").ShowColon(false))
                                        .ColSpan(12)
                                        .CssClass("h6 br-section-label");
                                }
                            );

                            items.AddGroup().ColCount(12).Items(
                                itemGroup =>
                                {
                                    itemGroup.AddGroup().ColSpan(12).Items(
                                        itemGroup0 =>
                                        {
                                            itemGroup0.AddGroup().ColCount(12).Items(
                                                itemGroup2 =>
                                                {
                                                    itemGroup2.AddSimple().Template(new TemplateName("btnAgregarTemplate"))
                                                        .ColSpan(12)
                                                        .Visible(!Model.SoloLectura && Model.OrdenCompra.Status.Equals(ControlMaestroMapeo.EstatusOrdenCompra.ACTIVA));
                                                }
                                            );

                                            itemGroup0.AddGroup().ColCount(12).Items(
                                                itemGroup2 =>
                                                {
                                                    itemGroup2.AddSimple().Template(new TemplateName("detallesTemplate"))
                                                        .ColSpan(12);
                                                }
                                            );
                                        }
                                    );
                                }
                            ).CssClass("form-layout form-layout-1");
                        }
                    )
                )

                <div class="form-layout-footer pd-t-10">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="float-right">
                                @(Html.DevExtreme()
                                    .Button()
                                    .ID("dxButtonCancelar")
                                    .Text("Cerrar")
                                    .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mg-t-15 mg-l-5")
                                    .OnClick("function() { validaDeshacer(true); }")
                                )
                                @(Html.DevExtreme()
                                    .Button()
                                    .ID("dxButtonDeshacer")
                                    .Text("Deshacer")
                                    .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mg-t-15 mg-l-5")
                                    .OnClick("function() { validaDeshacer(false); }")
                                )
                                @(Html.DevExtreme()
                                    .Button()
                                    .ID("dxButtonEliminar")
                                    .Text("Cancelar")
                                    .ElementAttr("class", "btn-danger btn-oblong btn-width-100 mg-t-15 mg-l-5")
                                    .OnClick("validaEliminar")
                                )
                                @(Html.DevExtreme()
                                    .Button()
                                    .ID("dxButtonGuardaCambios")
                                    .Text("Guardar")
                                    .ElementAttr("class", "btn-success btn-oblong btn-width-100 mg-t-15 mg-l-5")
                                    .OnClick("guardaCambios")
                                )
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@using (Html.DevExtreme().NamedTemplate("btnAgregarTemplate"))
{
    <div class="">
        <div class="row">
            <div class="col-md-12 col-lg-12">
                <div class="float-right">
                    @(Html.DevExtreme().Button()
                        .ID("dxButtonAgregar")
                        .Text("Agregar")
                        .ElementAttr("class", "btn-primary btn-oblong btn-width-100 mg-t-10 mg-b-10")
                        .OnClick("nuevoRegistro")
                    )
                </div>
            </div>
        </div>
    </div>
}

@using (Html.DevExtreme().NamedTemplate("detallesTemplate"))
{
    <div class="">
        <div class="row">
            <div class="col-12">
                @(Html.DevExtreme().DataGrid<OrdenCompraDetalleItem>()
                    .ID("dxGridDetalles")
                    .DataSource(m => m.Array().Data(Model.ListOrdenCompraDetalles).Key("OrdenCompraDetId"))
                    .ShowBorders(true)
                    .ColumnAutoWidth(true)
                    .AllowColumnResizing(true)
                    .ColumnResizingMode(ColumnResizingMode.Widget)
                    .RowAlternationEnabled(true)
                    .NoDataText("Sin registros")
                    .LoadPanel(p => p.Enabled(true))
                    .OnCellPrepared("onCellPrepared")
                    .Columns(c =>
                    {
                        c.AddFor(m => m.UnidadAdministrativaId).Caption("Unidad Administrativa").Alignment(HorizontalAlignment.Center);
                        c.AddFor(m => m.ProyectoId).Caption("Proyecto").Alignment(HorizontalAlignment.Center);
                        c.AddFor(m => m.FuenteFinanciamientoId).Caption("Fuente de Financiamiento").Alignment(HorizontalAlignment.Center);
                        c.AddFor(m => m.TipoGastoId).Caption("Tipo de Gasto").Alignment(HorizontalAlignment.Center);
                        c.AddFor(m => m.Descripcion).CalculateCellValue("gridBox_displayExpr");
                        c.AddFor(m => m.UnidadDeMedida).Caption("UM");
                        c.AddFor(m => m.Costo).Format("$ #,##0.0000");
                        c.AddFor(m => m.Cantidad).Format("#,##0.0000");
                        c.AddFor(m => m.Importe).Format("$ #,##0.0000");
                        c.AddFor(m => m.Impuesto);
                        c.AddFor(m => m.Ajuste).Format("$ #,##0.0000");
                        c.AddFor(m => m.IEPS).Format("$ #,##0.00");
                        c.AddFor(m => m.CantidadRecibida).Format("#,##0.0000");
                        c.AddFor(m => m.CantidadPorRecibir).Format("#,##0.0000");
                        c.AddFor(m => m.Estatus).Fixed(true).FixedPosition(HorizontalEdge.Right);
                        c.Add()
                            .Width(100)
                            .Caption("")
                            .Fixed(true)
                            .FixedPosition(HorizontalEdge.Right)
                            .Type(GridCommandColumnType.Buttons)
                            .Visible(!Model.SoloLectura)
                            .Buttons(b =>
                            {
                                b.Add()
                                    .Name("btnEditarArticulo")
                                    .Hint("Editar")
                                    .Icon("edit")
                                    .OnClick("editaRegistro")
                                    .Visible(new JS("function(event) { return event.row.data.PermiteEditar; }"));

                                b.Add()
                                    .Name("btnEliminarArticulo")
                                    .Hint("Eliminar")
                                    .Icon("trash")
                                    .OnClick("validaEliminarArticulo")
                                    .Visible(new JS("function(event) { return event.row.data.PermiteEditar; }"));
                            });
                    })
                    .SortByGroupSummaryInfo(i => i.Add().SummaryItem("count"))
                    .Summary(s => s.TotalItems(items =>
                    {
                        items.AddFor(m => m.Importe)
                            .CssClass("h6 font-weight-normal")
                            .SummaryType(SummaryType.Sum)
                            .ValueFormat("$ #,##0.0000")
                            .ShowInColumn("Estatus")
                            .Alignment(HorizontalAlignment.Right)
                            .DisplayFormat("Subtotal: {0}");

                        items.AddFor(m => m.IEPS)
                            .CssClass("h6 font-weight-normal")
                            .SummaryType(SummaryType.Sum)
                            .ValueFormat("$ #,##0.00")
                            .ShowInColumn("Estatus")
                            .Alignment(HorizontalAlignment.Right)
                            .DisplayFormat("IEPS: {0}");

                        items.AddFor(m => m.IVA)
                            .CssClass("h6 font-weight-normal")
                            .SummaryType(SummaryType.Sum)
                            .ValueFormat("$ #,##0.00")
                            .ShowInColumn("Estatus")
                            .Alignment(HorizontalAlignment.Right)
                            .DisplayFormat("IVA: {0}");

                        items.AddFor(m => m.ISH)
                            .CssClass("h6 font-weight-normal")
                            .SummaryType(SummaryType.Sum)
                            .ValueFormat("$ #,##0.00")
                            .ShowInColumn("Estatus")
                            .Alignment(HorizontalAlignment.Right)
                            .DisplayFormat("ISH: {0}");

                        items.AddFor(m => m.Ajuste)
                            .CssClass("h6 font-weight-normal")
                            .SummaryType(SummaryType.Sum)
                            .ValueFormat("$ #,##0.0000")
                            .ShowInColumn("Estatus")
                            .Alignment(HorizontalAlignment.Right)
                            .DisplayFormat("Ajuste: {0}");

                        items.AddFor(m => m.Total)
                            .CssClass("h6 font-weight-bold")
                            .SummaryType(SummaryType.Sum)
                            .ValueFormat("$ #,##0.00")
                            .ShowInColumn("Estatus")
                            .Alignment(HorizontalAlignment.Right)
                            .DisplayFormat("Total: {0}");
                    })
                    )
                    .Paging(paging => paging.PageSize(10))
                    .Pager(pager =>
                    {
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new[] { 0, 10, 20, 30, 40, 50 });
                        pager.ShowInfo(true);
                        pager.InfoText("Página {0} de {1} ( {2} Registros )");
                    })
                )
            </div>
        </div>
    </div>
}

@using (Html.DevExtreme().NamedTemplate("DataGridTemplate"))
{
    @(Html.DevExtreme().DataGrid()
        .ID("dxDataGridTemplate")
        .DataSource(new JS(@"component.getDataSource()"))
        .KeyExpr("AlmacenProductoId")
        .AllowColumnReordering(false)
        .ColumnAutoWidth(true)
        .WordWrapEnabled(true)
        .ShowBorders(true)
        .Grouping(g => g.AutoExpandAll(false))
        .NoDataText("Sin registros")
        .Selection(s => s.Mode(SelectionMode.Single))
        .OnCellPrepared("onCellPrepared")
        .Columns(c =>
        {
            c.Add().DataField("Producto").AllowSorting(false).GroupIndex(0);
            c.Add().DataField("UnidadAdministrativaId")
                .Caption("Unidad Administrativa")
                .Alignment(HorizontalAlignment.Center)
                .AllowSorting(false);
            c.Add().DataField("ProyectoId")
                .Caption("Proyecto")
                .Alignment(HorizontalAlignment.Center)
                .AllowSorting(false);
            c.Add().DataField("FuenteFinanciamientoId")
                .Caption("Fuente de Financiamiento")
                .Alignment(HorizontalAlignment.Center)
                .AllowSorting(false);
            c.Add().DataField("TipoGastoId")
                .Caption("Tipo de Gasto")
                .Alignment(HorizontalAlignment.Center)
                .AllowSorting(false);
        })
        .HoverStateEnabled(true)
        .Paging(p => p.PageSize(10))
        .FilterRow(f => f.Visible(true))
        .Scrolling(s => s.Mode(GridScrollingMode.Virtual))
        .Height(330)
        .OnSelectionChanged(@<text>
            function(selectedItems) {
                if(selectedItems.selectedRowKeys.length) {
                    cboProductoChange(selectedItems.selectedRowKeys[0]);
                    component.option("value", selectedItems.selectedRowKeys[0].AlmacenProductoId);
                }
            }
        </text>)
    )
}

<!-- PLANTILLA PARA EL TOOLTIP -->
<div>
    @(Html.DevExtreme().Tooltip()
        .ID("tooltip")
        .ShowEvent("mouseenter")
        .HideEvent("mouseleave")
        .CloseOnOutsideClick(false)
        .Position(Position.Top)
    )
</div>

<!-- MODAL NUEVO O EDITAR -->
<div class="modal fade effect-scale" id="modalDetalle" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true" isEdit>
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold">Agregar artículo</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>

            <div class="modal-body pd-25">
                @using (Html.BeginForm())
                {
                    using (Html.DevExtreme().ValidationGroup("dxValidationGroup2"))
                    {
                        @Html.AntiForgeryToken();
                        @(Html.DevExtreme().Form<OrdenCompraDetalleItem>()
                            .ID("dxFormModal")
                            .FormData(new OrdenCompraDetalleItem())
                            .LabelLocation(FormLabelLocation.Top)
                            .RequiredMark("(*)")
                            .Items(
                                item =>
                                {
                                    item.AddGroup().ColCount(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddSimpleFor(m => m.AlmacenProductoId)
                                                .ColSpan(12)
                                                .CssClass("tx-bold")
                                                .IsRequired(true)
                                                .Editor(e => e.DropDownBox()
                                                    .ID("dxCboProducto")
                                                    .DataSource(Model.ListProductos)
                                                    .ValueExpr("AlmacenProductoId")
                                                    .DisplayExpr(new JS("gridBox_displayExpr"))
                                                    .ContentTemplate(new TemplateName("DataGridTemplate"))
                                                    .Placeholder("Selecciona una opción"));
                                        }
                                    );

                                    item.AddGroup().ColCount(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddSimpleFor(m => m.UnidadDeMedida)
                                                .ColSpan(6)
                                                .CssClass("tx-bold")
                                                .Editor(e => e.TextBox()
                                                    .ID("dxTxtUnidadMedida")
                                                    .ReadOnly(true));

                                            itemGroup.AddSimpleFor(m => m.Costo)
                                                .ColSpan(6)
                                                .CssClass("tx-bold")
                                                .Editor(e => e.NumberBox()
                                                    .ID("dxTxtCostoUnitario")
                                                    .Format("$ #,##0.0000")
                                                    .Min(0.0001)
                                                    .OnValueChanged("calculaTotalesModal"));
                                        }
                                    );

                                    item.AddGroup().ColCount(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddSimpleFor(m => m.Cantidad)
                                                .ColSpan(6)
                                                .CssClass("tx-bold")
                                                .Editor(e => e.NumberBox()
                                                    .ID("dxTxtCantidad")
                                                    .Format("#,##0.0000")
                                                    .Min(0.0001)
                                                    .OnValueChanged("calculaTotalesModal"));

                                            itemGroup.AddSimpleFor(m => m.Importe)
                                                .ColSpan(6)
                                                .CssClass("tx-bold")
                                                .Editor(e => e.NumberBox()
                                                    .ID("dxTxtImporte")
                                                    .Format("$ #,##0.0000")
                                                    .ReadOnly(true));
                                        }
                                    );

                                    item.AddGroup().ColCount(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddSimpleFor(m => m.TarifaImpuestoId)
                                                .ColSpan(6)
                                                .CssClass("tx-bold")
                                                .Editor(e => e.SelectBox()
                                                    .ID("dxCboImpuesto")
                                                    .DataSource(Model.ListTarifasImpuesto)
                                                    .ValueExpr("TarifaImpuestoId")
                                                    .DisplayExpr("Nombre")
                                                    .SearchEnabled(true)
                                                    .SearchMode(DropDownSearchMode.Contains)
                                                    .NoDataText("Sin registros que mostrar")
                                                    .Placeholder("Selecciona una opción")
                                                    .OnValueChanged("cboImpuestoChange"));

                                            itemGroup.AddSimpleFor(m => m.IEPS)
                                                .ColSpan(6)
                                                .CssClass("tx-bold")
                                                .Editor(e => e.NumberBox()
                                                    .ID("dxTxtIEPS")
                                                    .Format("$ #,##0.00")
                                                    .Min(0)
                                                    .OnValueChanged("calculaTotalesModal"));
                                        }
                                    );

                                    item.AddGroup().ColCount(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddSimpleFor(m => m.Ajuste)
                                                .ColSpan(6)
                                                .CssClass("tx-bold")
                                                .Editor(e => e.NumberBox()
                                                    .ID("dxTxtAjuste")
                                                    .Format("#,##0.0000")
                                                    .Min(0)
                                                    .OnValueChanged("calculaTotalesModal"));

                                            itemGroup.AddSimpleFor(m => m.Total)
                                                .ColSpan(6)
                                                .CssClass("tx-bold")
                                                .Editor(e => e.NumberBox()
                                                    .ID("dxTxtImporte")
                                                    .Format("$ #,##0.0000")
                                                    .ReadOnly(true));
                                        }
                                    );
                                }
                            )
                        )
                    }
                }
            </div>

            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="float-right">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mg-l-5")
                                .OnClick("function() { modalDetalle.modal('hide'); }")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Guardar")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mg-l-5")
                                .OnClick("guardaCambiosModal")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MODAL LIMPIAR TABLA -->
<div class="modal fade effect-scale" id="modalConfirmaLimpiar" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <div>
                    <h5 class="dx-field-item-label-text modal-title">Se borrarán los artículos añadidos a la tabla.</h5>
                    ¿Desea continuar?
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="d-flex flex-row flex-sm-row flex-md-row flex-lg-row flex-xl-row justify-content-end justify-content-sm-end justify-content-md-end justify-content-lg-end justify-content-xl-end">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mr-3 mr-sm-3 mr-md-3 mr-lg-3 mr-xl-3")
                                .OnClick("function() { modalConfirmaLimpiar.modal('hide'); cancelarLimpirar(); }")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mt-0 mt-sm-0 mt-md-0 mt-lg-0 mt-xl-0")
                                .OnClick("function() { modalConfirmaLimpiar.modal('hide'); limpiarTabla(); }")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MODAL DESHACER -->
<div class="modal fade effect-scale" id="modalConfirmaDeshacer" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <div>
                    <h5 class="dx-field-item-label-text modal-title">Se perderán los cambios realizados.</h5>
                    ¿Desea continuar?
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="d-flex flex-row flex-sm-row flex-md-row flex-lg-row flex-xl-row justify-content-end justify-content-sm-end justify-content-md-end justify-content-lg-end justify-content-xl-end">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mr-3 mr-sm-3 mr-md-3 mr-lg-3 mr-xl-3")
                                .OnClick("function() { modalConfirmaDeshacer.modal('hide'); }")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mt-0 mt-sm-0 mt-md-0 mt-lg-0 mt-xl-0")
                                .OnClick("function() { modalConfirmaDeshacer.modal('hide'); cancelar(); }")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MODAL ELIMINAR -->
<div class="modal fade effect-scale" id="modalConfirmaEliminar" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <h5 class="dx-field-item-label-text modal-title">¿Está seguro de cancelar la OC?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="d-flex flex-row flex-sm-row flex-md-row flex-lg-row flex-xl-row justify-content-end justify-content-sm-end justify-content-md-end justify-content-lg-end justify-content-xl-end">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mr-3 mr-sm-3 mr-md-3 mr-lg-3 mr-xl-3")
                                .OnClick("function() { modalConfirmaEliminar.modal('hide'); }")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mt-0 mt-sm-0 mt-md-0 mt-lg-0 mt-xl-0")
                                .OnClick("function() { modalConfirmaEliminar.modal('hide'); eliminaOC(); }")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MODAL ELIMINAR ARTICULO -->
<div class="modal fade effect-scale" id="modalConfirmaEliminarArticulo" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <h5 class="dx-field-item-label-text modal-title">¿Está seguro de eliminar el artículo?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="d-flex flex-row flex-sm-row flex-md-row flex-lg-row flex-xl-row justify-content-end justify-content-sm-end justify-content-md-end justify-content-lg-end justify-content-xl-end">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mr-3 mr-sm-3 mr-md-3 mr-lg-3 mr-xl-3")
                                .OnClick("function() { modalConfirmaEliminarArticulo.modal('hide'); }")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mt-0 mt-sm-0 mt-md-0 mt-lg-0 mt-xl-0")
                                .OnClick("function() { modalConfirmaEliminarArticulo.modal('hide'); eliminaArticulo(); }")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MODAL LOADER -->
@Html.Partial("~/Views/Shared/_LoadPanel.cshtml")

<script src="~/Scripts/mapeos/control_maestro_mapeo.js"></script>
<script src="~/Areas/Compras/Compras/Views/OrdenCompra/OrdenCompra.js"></script>

<script>DevExpress.localization.locale(navigator.language);</script>

<!-- VARIABLES GLOBALES MODEL -->
<script>
    var _soloLectura = @Html.Raw(Json.Encode(Model.SoloLectura));
    var _listProveedores = @Html.Raw(Json.Encode(Model.ListProveedores));
    var _listTarifasImpuesto = @Html.Raw(Json.Encode(Model.ListTarifasImpuesto));
    var _ejercicio = @Html.Raw(Json.Encode(Model.EjercicioUsuario));
</script>