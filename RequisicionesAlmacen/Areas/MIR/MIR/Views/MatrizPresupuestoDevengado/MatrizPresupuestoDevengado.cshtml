@model RequisicionesAlmacen.Areas.MIR.MIR.Models.ViewModel.MatrizPresupuestoDevengadoViewModel
@{
    ViewData["Title"] = "Matriz de Presupuesto Devengado";
}

<link href="~/Content/areas/mir/MatrizConfiguracionPresupuestal.css" rel="stylesheet" />

@Html.Partial("_HeaderLayout", new ViewDataDictionary { { "NombreFicha", "Matriz de Presupuesto Devengado" }, { "Accion", "" }, { "Icono", "icon ion-ios-filing-outline" } })

<!-- MODAL LOADER -->
@Html.Partial("~/Views/Shared/_LoadPanel.cshtml")

<!-- MODAL CONFIRMA GUARDAR -->
<div class="modal fade effect-scale pixvs-modal-confirma-guardar" id="modalConfirmaGuardar" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <div>
                    <h5 class="dx-field-item-label-text modal-title">El mes que intenta guardar esta cerrado, si quiere guardarlo será necesario ir al menú control de periodos y abrir el mes correspondiente.</h5>
                    @*¿Desea continuar?*@
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="d-flex flex-row flex-sm-row flex-md-row flex-lg-row flex-xl-row justify-content-end justify-content-sm-end justify-content-md-end justify-content-lg-end justify-content-xl-end">
                            @*@(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mr-3 mr-sm-3 mr-md-3 mr-lg-3 mr-xl-3")
                                .OnClick("() => { modalConfirmaGuardar.modal('hide'); dxLoaderPanel.hide(); }")
                            )*@
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .OnClick("modalAceptaPeriodo")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mt-0 mt-sm-0 mt-md-0 mt-lg-0 mt-xl-0")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MODAL CERRAR -->
<div class="modal fade effect-scale" id="modalCerrar" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <div>
                    <h5 class="dx-field-item-label-text">Existen cambios sin guardar.</h5>
                    ¿Desea continuar?
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="d-flex flex-row flex-sm-row flex-md-row flex-lg-row flex-xl-row justify-content-end justify-content-sm-end justify-content-md-end justify-content-lg-end justify-content-xl-end">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mr-3 mr-sm-3 mr-md-3 mr-lg-3 mr-xl-3")
                                .OnClick("() => modalCerrar.modal('hide')")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mt-0 mt-sm-0 mt-md-0 mt-lg-0 mt-xl-0")
                                .OnClick("() => { regresarListado(); }")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- CONTENT -->
<div class="br-pagebody">
    <div class="br-section-wrapper">
        <div class="row">
            <div class="col-12">
                <!-- Create Form -->
                @(Html.DevExtreme()
                .Form<RequisicionesAlmacenBL.Entities.MItblMatrizConfiguracionPresupuestal>()
                .ID("dxFormMatrizConfiguracionPresupuestal")
                .FormData(Model.MatrizConfiguracionPresupuestal)
                .LabelLocation(FormLabelLocation.Left)
                .Items(itemCaption =>
                {
                    itemCaption.AddGroup()
                    .ColSpan(12)
                    .ColCount(12)
                    .Caption("Datos Generales")
                    .Name("DatosGenerlaes")
                    .Items(itemDatosIndicador =>
                    {
                        itemDatosIndicador.AddGroup()
                        .ColSpan(12)
                        .ColCount(12)
                        .Name("DatosGeneralesGrupo")
                        .Items(itemGroup =>
                        {

                            itemGroup.AddGroup()
                            .ColSpan(6)
                            .ColCount(12)
                            .Items(_itemGroup =>
                            {
                                _itemGroup.AddSimple()
                                .Label(label => label.Text("Código"))
                                .DataField("Codigo")
                                .ColSpan(12)
                                .Editor(e => e
                                    .TextBox()
                                    .ReadOnly(true)
                                    .ID("dxTextBoxCodigo")
                                );

                                _itemGroup.AddSimple()
                                .Label(label => label.Text("Programa Presupuestario"))
                                .DataField("ProgramaPresupuestario")
                                .ColSpan(12)
                                .Editor(e => e
                                    .TextArea()
                                    .ReadOnly(true)
                                    .ID("dxTextBoxProgramaPresupuestario")
                                );
                            });

                            itemGroup.AddGroup()
                            .ColSpan(6)
                            .ColCount(12)
                            .Items(_itemGroup =>
                            {
                                _itemGroup.AddSimpleFor(m => m.PresupuestoPorEjercer)
                                .ColSpan(12)
                                .Editor(e => e
                                    .NumberBox()
                                    .ReadOnly(true)
                                    .ID("dxNumberBoxPresupuestoPorEjercer")
                                    .Format("$ #,##0.00")
                                );

                                _itemGroup.AddSimpleFor(m => m.PresupuestoDevengado)
                                .ColSpan(12)
                                .CssClass("text-right")
                                .Editor(e => e
                                    .NumberBox()
                                    .ReadOnly(true)
                                    .ID("dxNumberBoxPresupuestoDevengado")
                                    .Format("$ #,##0.00")
                                );
                            });
                        });
                    });

                    itemCaption.AddGroup()
                    .ColSpan(12)
                    .ColCount(12)
                    .Caption("Matriz de Presupuesto Devengado")
                    .Name("MatrizDePresupuestos")
                    .Items(itemDatosControlCalculo =>
                    {
                        itemDatosControlCalculo.AddSimple()
                        .ColSpan(12)
                        .Template(new TemplateName("templateDataGridDevengado"));
                    });
                })
            )
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="d-flex flex-column flex-sm-column flex-md-row flex-lg-row flex-xl-row align-items-center align-items-sm-center justify-content-md-end justify-content-lg-end justify-content-xl-end">
                    @(Html.DevExtreme()
                        .Button()
                        .ID("dxButtonCerrar")
                        .Text("Cerrar")
                        .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mb-2 mb-sm-2 mb-md-0 mb-lg-0 mb-xl-0 mr-md-3 mr-lg-3 mr-xl-3")
                        .OnClick("validaHayCambios")
                    )
                    @(Html.DevExtreme()
                        .Button()
                        .Text("Guardar")
                        .ElementAttr("class", "btn-success btn-oblong btn-width-100 mt-0 mt-sm-0 mt-md-0 mt-lg-0 mt-xl-0")
                        .OnClick("validaPeriodo")
                    )
                </div>
            </div>

        </div>
    </div>
</div>

@* Template DataGrid Devengado *@
@using (Html.DevExtreme().NamedTemplate("templateDataGridDevengado"))
{
    <div class="row">
        <div class="col-12">
            @(Html.DevExtreme()
            .DataGrid<RequisicionesAlmacenBL.Entities.MItblMatrizConfiguracionPresupuestalDetalle>()
            .ID("dxDataGridDevengado")
            .KeyExpr("ConfiguracionPresupuestoId")
            .OnInitialized("onInitializedDataGridDevengado")
            .Editing(editing =>
            {
                editing.Mode(GridEditMode.Cell)
                .AllowUpdating(true);
            })
            .ShowBorders(true)
            .ColumnAutoWidth(true)
            .AllowColumnResizing(true)
            .ColumnResizingMode(ColumnResizingMode.Widget)
            .RowAlternationEnabled(false)
            .ShowColumnHeaders(true)
            .ShowColumnLines(true)
            .ShowRowLines(true)
            .NoDataText("Sin registros")
            .Paging(paging => paging.PageSize(10))
            .Pager(pager =>
            {
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new[] { 10, 20, 40, 80 });
                pager.ShowInfo(true);
                pager.InfoText("Página {0} de {1} ( {2} Registros )");
            })
            .Columns(column =>
            {

                column.Add()
                .DataField("Componente")
                .GroupIndex(0);

                column.Add()
                .DataField("Actividad")
                .Caption("")
                .AllowEditing(false)
                .Alignment(HorizontalAlignment.Left)
                .AllowSorting(false);
                //.HeaderCellTemplate(new JS("headerCellTemplate"));

                column.Add()
                .Caption("Enero")
                .DataField("Enero")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Febrero")
                .DataField("Febrero")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Marzo")
                .DataField("Marzo")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Abril")
                .DataField("Abril")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Mayo")
                .DataField("Mayo")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Junio")
                .DataField("Junio")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Julio")
                .DataField("Julio")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Agosto")
                .DataField("Agosto")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Septiembre")
                .DataField("Septiembre")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Octubre")
                .DataField("Octubre")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Noviembre")
                .DataField("Noviembre")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Diciembre")
                .DataField("Diciembre")
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number)
                .EditorOptions(new { format = "$ #,##0.00" });

                column.Add()
                .Caption("Anual")
                .DataField("Anual")
                .AllowEditing(false)
                .Format("$ #,##0.00")
                .DataType(GridColumnDataType.Number);

                column.Add()
                .Caption("Porcentaje")
                .DataField("Porcentaje")
                .AllowEditing(false)
                .Format("#0.00 '%'")
                .DataType(GridColumnDataType.Number);
            })
            .Summary(summary => summary
                .RecalculateWhileEditing(false)
                .GroupItems(groupItems =>
                {
                    groupItems.Add()
                    .ShowInColumn("Actividad")
                    .Name("Actividad")
                    .ShowInGroupFooter(true)
                    .ValueFormat("Diferencia");

                    groupItems.Add()
                    .ShowInColumn("Enero")
                    .Name("EneroCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Enero")
                    .Name("Enero")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Febrero")
                    .Name("FebreroCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Febrero")
                    .Name("Febrero")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Marzo")
                    .Name("MarzoCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Marzo")
                    .Name("Marzo")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Abril")
                    .Name("AbrilCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Abril")
                    .Name("Abril")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Mayo")
                    .Name("MayoCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Mayo")
                    .Name("Mayo")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Junio")
                    .Name("JunioCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Junio")
                    .Name("Junio")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Julio")
                    .Name("JulioCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Julio")
                    .Name("Julio")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Agosto")
                    .Name("AgostoCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Agosto")
                    .Name("Agosto")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Septiembre")
                    .Name("SeptiembreCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Septiembre")
                    .Name("Septiembre")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Octubre")
                    .Name("OctubreCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Octubre")
                    .Name("Octubre")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Noviembre")
                    .Name("NoviembreCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Noviembre")
                    .Name("Noviembre")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Diciembre")
                    .Name("DiciembreCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Diciembre")
                    .Name("Diciembre")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Anual")
                    .Name("AnualCabecera")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Anual")
                    .Name("Anual")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(true)
                    .ValueFormat("$ #,##0.00");

                    groupItems.Add()
                    .ShowInColumn("Porcentaje")
                    .Name("Porcentaje")
                    .SummaryType(SummaryType.Custom)
                    .ShowInGroupFooter(false)
                    .AlignByColumn(true)
                    .ValueFormat("#0.00 '%'");
                })
                .CalculateCustomSummary("calculateCustomSummary")
            )
            .OnEditingStart("onEditingStart")
            .OnEditorPreparing("onEditorPreparing")
            .OnCellPrepared("onCellPrepared")
        )
        </div>
    </div>
}

<script src="~/Scripts/funciones/funcion.js" type="text/javascript"></script>
<script src="~/Scripts/mapeos/control_maestro_mapeo.js" type="text/javascript"></script>

<script>
    // VARIABLES GLOBALES MODEL //
    var _consultaMatrizIndicadorResultado = @Html.Raw(Json.Encode(Model.ConsultaMatrizIndicadorResultado)),
        _listaMatrizIndicadorResultadoIndicador = @Html.Raw(Json.Encode(Model.ListaMatrizIndicadorResultadoIndicador)),
        _matrizConfiguracionPresupuestal = @Html.Raw(Json.Encode(Model.MatrizConfiguracionPresupuestal)),
        _matrizConfiguracionPresupuestalModel = @Html.Raw(Json.Encode(Model.MatrizConfiguracionPresupuestalModel)),
        _listaMatrizConfiguracionPresupuestalDetalle = @Html.Raw(Json.Encode(Model.ListaMatrizConfiguracionPresupuestalDetalle)),
        _matrizConfiguracionPresupuestalDetalleModel = @Html.Raw(Json.Encode(Model.MatrizConfiguracionPresupuestalDetalleModel)),
        _listaDevengado = @Html.Raw(Json.Encode(Model.ListaDevengado)),
        _listaControlMaestroControlPeriodo =  @Html.Raw(Json.Encode(Model.ListaControlMaestroControlPeriodo)),
        _listaMIRIComponente = @Html.Raw(Json.Encode(Model.ListaMIRIComponente));
    //////////////////////////////
</script>
<script src="~/Areas/MIR/MIR/Views/MatrizPresupuestoDevengado/MatrizPresupuestoDevengado.js" type="text/javascript"></script>
