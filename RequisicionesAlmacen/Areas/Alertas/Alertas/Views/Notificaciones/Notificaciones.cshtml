@using RequisicionesAlmacen.Areas.Alertas.Alertas.Models.ViewModel
@using RequisicionesAlmacenBL.Entities
@using RequisicionesAlmacenBL.Models.Mapeos
@model NotificacionesViewModel
@using Newtonsoft.Json;

<link href="~/Content/Site.css" rel="stylesheet" />

@Html.Partial("_HeaderLayout", new ViewDataDictionary { { "NombreFicha", "Notificaciones" }, { "Accion", "" }, { "Icono", "icon ion-ios-bell" } })
<div class="br-pagebody">
    <div class="br-section-wrapper">
        @using (Html.BeginForm())
        {
            using (Html.DevExtreme().ValidationGroup("dxValidationGroup"))
            {
                @Html.AntiForgeryToken();

                @(Html.DevExtreme().Form<GRtblAlerta>()
                    .ID("dxForm")
                    .FormData(new GRtblAlertaConfiguracion())
                    .LabelLocation(FormLabelLocation.Top)
                    .RequiredMark("(*)")
                    .Items(
                        items =>
                        {
                            items.AddGroup().ColCount(12).Items(
                                itemGroup =>
                                {
                                    itemGroup.AddSimple()
                                        .Label(label => label.Text("Autorizaciones & Notificaciones").ShowColon(false))
                                        .ColSpan(12)
                                        .CssClass("h6 br-section-label");

                                    itemGroup.AddSimple()
                                        .ColSpan(12)
                                        .Template(new TemplateName("tabTemplate"));
                                }
                            );
                        }
                    )
                )
            }
        }
    </div>
</div>

@using (Html.DevExtreme().NamedTemplate("tabTemplate"))
{
    <div class="bd">
        <div class="toolbar">
            @(Html.DevExtreme()
                .Toolbar()
                .ID("dxToolbar")
                .Items(items => {
                    items
                    .Add()
                    .Widget(w => w.Button()
                        .Icon("menu")
                        .OnClick("onClickToolbar")
                    ).Location(ToolbarItemLocation.Before);
                })
            )
        </div>
        <div class="drawer">
            @(Html.DevExtreme()
                .Drawer()
                .ID("dxDrawer")
                .OpenedStateMode(DrawerOpenedStateMode.Shrink)
                .Opened(true)
                .Position(DrawerPosition.Left)
                .RevealMode(DrawerRevealMode.Slide)
                .CloseOnOutsideClick(false)
                .Template(@<text>
                    <div style="width: 200px; height: 100%">
                        @(Html.DevExtreme().List()
                            .ID("dxListDrawer")
                            .Items(items => {
                                items.Add().Text("Autorizaciones").Icon("selectall").Option("index", 1);
                                items.Add().Text("Notificaciones").Icon("tips").Option("index", 2);
                            })
                            .KeyExpr("index")
                            .HoverStateEnabled(false)
                            .FocusStateEnabled(false)
                            .ActiveStateEnabled(false)
                            .SelectionMode(ListSelectionMode.Single)
                            .OnItemClick("onItemClickDrawer")
                            .ElementAttr("class", "panel-list dx-theme-accent-as-background-color")
                            .SelectedItemKeys(new[] { 1 })
                        )
                    </div>
                </text>)
                .Content(@<text>
                    <div id="templateContent" class="d-none dx-theme-background-color p-3">
                        @* Autorizaciones *@
                        <div id="tabAutorizaciones">
                            <div class="row">
                                <div class="col-12">
                                    @(Html.DevExtreme().DataGrid<GRspGetListadoAlertasPorUsuario_Result>()
                                        .ID("dxGridAutorizaciones")
                                        .DataSource(m => m.Array().Data(Model.ListAlertas).Key("AlertaId"))
                                        .DataSourceOptions(o => o.Filter("filtrarAutorizaciones"))
                                        .ShowBorders(true)
                                        .ColumnAutoWidth(true)
                                        .AllowColumnResizing(true)
                                        .ColumnResizingMode(ColumnResizingMode.Widget)
                                        .RowAlternationEnabled(true)
                                        .NoDataText("Sin registros")
                                        .LoadPanel(p => p.Enabled(true))
                                        .Columns(c =>
                                        {
                                            c.AddFor(m => m.AlertaIniciadaPor);
                                            c.AddFor(m => m.Fecha);
                                            c.AddFor(m => m.TipoMovimiento);
                                            c.AddFor(m => m.Tramite);
                                            c.AddFor(m => m.Estatus);
                                            c.Add()
                                                .Width(125)
                                                .Caption("")
                                                .Fixed(true)
                                                .FixedPosition(HorizontalEdge.Right)
                                                .Type(GridCommandColumnType.Buttons)
                                                .Buttons(b =>
                                                {
                                                    b.Add()
                                                        .Hint("Ver")
                                                        .Icon("info")
                                                        .Visible(new JS("function(event) { return event.row.data.RutaAccion; }"))
                                                        .OnClick("verAlerta");

                                                    b.Add()
                                                        .Hint("Autorizar")
                                                        .Icon("selectall")
                                                        .Visible(new JS("function(event) { return event.row.data.EtapaAccionAlAutorizarId; }"))
                                                        .OnClick("validaAutorizar");

                                                    b.Add()
                                                        .Hint("Enviar a Revisión")
                                                        .Icon("warning")
                                                        .Visible(new JS("function(event) { return event.row.data.EtapaAccionAlRevisionId; }"))
                                                        .OnClick("validaRevision");

                                                    b.Add()
                                                        .Hint("Rechazar")
                                                        .Icon("clear")
                                                        .Visible(new JS("function(event) { return event.row.data.EtapaAccionAlRechazarId; }"))
                                                        .OnClick("validaRechazar");
                                                });
                                        })
                                        .Paging(paging => paging.PageSize(10))
                                        .Pager(pager =>
                                        {
                                            pager.ShowPageSizeSelector(true);
                                            pager.AllowedPageSizes(new[] { 0, 10, 20, 30, 40, 50 });
                                            pager.ShowInfo(true);
                                            pager.InfoText("Página {0} de {1} ( {2} Registros )");
                                        })
                                    )
                                </div>
                            </div>
                        </div>

                        @* Notificaciones *@
                        <div id="tabNotificaciones">
                            <div class="row">
                                <div class="col-12">
                                    @(Html.DevExtreme().DataGrid<GRspGetListadoAlertasPorUsuario_Result>()
                                        .ID("dxGridNotificaciones")
                                        .DataSource(m => m.Array().Data(Model.ListAlertas).Key("AlertaId"))
                                        .DataSourceOptions(o => o.Filter("filtrarNotificaciones"))
                                        .ShowBorders(true)
                                        .ColumnAutoWidth(true)
                                        .AllowColumnResizing(true)
                                        .ColumnResizingMode(ColumnResizingMode.Widget)
                                        .RowAlternationEnabled(true)
                                        .NoDataText("Sin registros")
                                        .Selection(s => s.Mode(SelectionMode.Multiple))
                                        .LoadPanel(p => p.Enabled(true))
                                        .Columns(c =>
                                        {
                                            c.AddFor(m => m.AlertaIniciadaPor);
                                            c.AddFor(m => m.Fecha);
                                            c.AddFor(m => m.TipoMovimiento);
                                            c.AddFor(m => m.Tramite);
                                            c.AddFor(m => m.Estatus);
                                            c.Add()
                                                .Width(50)
                                                .Caption("")
                                                .Fixed(true)
                                                .FixedPosition(HorizontalEdge.Right)
                                                .Type(GridCommandColumnType.Buttons)
                                                .Buttons(b =>
                                                {
                                                    b.Add()
                                                        .Hint("Ver")
                                                        .Icon("info")
                                                        .OnClick("verAlerta");
                                                });
                                        })
                                        .Paging(paging => paging.PageSize(10))
                                        .Pager(pager =>
                                        {
                                            pager.ShowPageSizeSelector(true);
                                            pager.AllowedPageSizes(new[] { 0, 10, 20, 30, 40, 50 });
                                            pager.ShowInfo(true);
                                            pager.InfoText("Página {0} de {1} ( {2} Registros )");
                                        })
                                        .OnSelectionChanged("onSelectionChange")
                                    )
                                </div>
                            </div>

                            <div class="form-layout-footer pd-t-10">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="float-right">
                                            @(Html.DevExtreme()
                                                .Button()
                                                .ID("dxButtonOcultar")
                                                .Text("Ocultar")
                                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mg-t-15 mg-l-5")
                                                .OnClick("ocultar")
                                            )
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </text>)
            )
        </div>
    </div>
}

<!-- Modal Autorizar-->
<div class="modal fade effect-scale" id="modalConfirmaAutorizar" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <span>
                    <h5 class="dx-field-item-label-text">Se autorizará el trámite.</h5>
                    ¿Desea continuar?
                </span>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="float-right">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mg-l-5")
                                .OnClick("function() { modalConfirmaAutorizar.modal('hide'); }")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .OnClick("function() { modalConfirmaAutorizar.modal('hide'); autorizar(); }")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mg-l-5")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Revisión-->
<div class="modal fade effect-scale" id="modalConfirmaRevision" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <span>
                    <h5 class="dx-field-item-label-text">Se enviará a revisión el tramite.</h5>
                    ¿Desea continuar?
                </span>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>

            <div class="modal-body pd-25">
                @using (Html.BeginForm())
                {
                    using (Html.DevExtreme().ValidationGroup("dxValidationGroup1"))
                    {
                        @Html.AntiForgeryToken()
                        @(Html.DevExtreme().Form<GRspGetListadoAlertasPorUsuario_Result>()
                            .ID("dxFormModalMotivoRevision")
                            .FormData(new GRspGetListadoAlertasPorUsuario_Result())
                            .LabelLocation(FormLabelLocation.Top)
                            .RequiredMark("(*)")
                            .Items(
                                items =>
                                {
                                    items.AddGroup().ColCount(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddSimpleFor(m => m.MotivoRechazo)
                                                .ColSpan(12)
                                                .CssClass("tx-bold")
                                                .Label(l => l.Text("Motivo"))
                                                .IsRequired(true)
                                                .Editor(e => e.TextArea().MaxLength(2000).Height(80));
                                        }
                                    );
                                })
                        )
                    }
                }
            </div>

            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="float-right">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mg-l-5")
                                .OnClick("function() { modalConfirmaRevision.modal('hide'); }")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .OnClick("function() { enviarRevision(); }")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mg-l-5")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Rechazar-->
<div class="modal fade effect-scale" id="modalConfirmaRechazar" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bd-0">
            <div class="modal-header pd-y-20 pd-x-25">
                <span>
                    <h5 class="dx-field-item-label-text">Se rechazará el tramite.</h5>
                    ¿Desea continuar?
                </span>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>

            <div class="modal-body pd-25">
                @using (Html.BeginForm())
                {
                    using (Html.DevExtreme().ValidationGroup("dxValidationGroup2"))
                    {
                        @Html.AntiForgeryToken()
                        @(Html.DevExtreme().Form<GRspGetListadoAlertasPorUsuario_Result>()
                            .ID("dxFormModalMotivoRechazo")
                            .FormData(new GRspGetListadoAlertasPorUsuario_Result())
                            .LabelLocation(FormLabelLocation.Top)
                            .RequiredMark("(*)")
                            .Items(
                                items =>
                                {
                                    items.AddGroup().ColCount(12).Items(
                                        itemGroup =>
                                        {
                                            itemGroup.AddSimpleFor(m => m.MotivoRechazo)
                                                .ColSpan(12)
                                                .CssClass("tx-bold")
                                                .Label(l => l.Text("Motivo"))
                                                .IsRequired(true)
                                                .Editor(e => e.TextArea().MaxLength(2000).Height(80));
                                        }
                                    );
                                })
                        )
                    }
                }
            </div>

            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-12">
                        <div class="float-right">
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Cancelar")
                                .ElementAttr("class", "btn-normal btn-oblong btn-width-100 mg-l-5")
                                .OnClick("function() { modalConfirmaRechazar.modal('hide'); }")
                            )
                            @(Html.DevExtreme()
                                .Button()
                                .Text("Aceptar")
                                .OnClick("function() { rechazar(); }")
                                .ElementAttr("class", "btn-success btn-oblong btn-width-100 mg-l-5")
                            )
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MODAL LOADER -->
@Html.Partial("~/Views/Shared/_LoadPanel.cshtml")

<script src="~/Scripts/mapeos/control_maestro_mapeo.js" type="text/javascript"></script>
<script src="~/Areas/Alertas/Alertas/Views/Notificaciones/Notificaciones.js"></script>

<!-- VARIABLES GLOBALES MODEL -->
<script>
    var _listAlertas = @Html.Raw(Json.Encode(Model.ListAlertas));
</script>