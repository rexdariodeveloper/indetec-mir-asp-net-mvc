@using RequisicionesAlmacen.Areas.RH.Ingreso.Models.ViewModel
@using RequisicionesAlmacenBL.Entities
@model EmpleadoViewModel

@Html.Partial("_HeaderLayout", new ViewDataDictionary { { "NombreFicha", "Empleados" }, { "Accion", "" }, { "Icono", "icon ion-person-stalker" } })
<div class="br-pagebody">
    <div class="br-section-wrapper">
        <div class="row mb-4">
            <div class="col-md-8 col-lg-8">
                <h6 class="br-section-label">Listado de Empleados</h6>
            </div>
            <div class="col-md-4 col-lg-4">
                <div class="float-right">
                    @(Html.DevExtreme().Button()
                        .Text("Nuevo")
                        .OnClick("nuevoEmpleado")
                        .ElementAttr("class", "btn-primary btn-oblong btn-width-100 mg-t-10")
                    )
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                @(Html.DevExtreme().DataGrid<RHtblEmpleado>()
                            .ID("dxGridEmpleados")
                            .DataSource(m => m.Array().Data(Model.ListEmpleado).Key("EmpleadoId"))
                            .ShowBorders(true)
                            .ColumnAutoWidth(true)
                            .AllowColumnResizing(true)
                            .ColumnResizingMode(ColumnResizingMode.Widget)
                            .RowAlternationEnabled(true)
                            .NoDataText("Sin registros")
                            .SearchPanel(
                                sp => sp.Placeholder("Buscar...")
                                        .SearchVisibleColumnsOnly(true)
                                        .HighlightSearchText(false)
                                        .Visible(true)
                                        .Width(200)
                            )
                            .Columns(c =>
                            {

                                c.AddFor(m => m.NumeroEmpleado).Alignment(HorizontalAlignment.Center).Width(150);
                                c.AddFor(m => m.FechaCreacion).Width(220)
                                    .Format("MMMM dd, yyyy hh:mm a");
                                c.AddFor(m => m.RFC).Width(150);
                                c.AddFor(m => m.Nombre).CalculateCellValue("nombreCompletoEmpleado");
                                c.Add()
                                    .Width(100)
                                    .Caption("Acciones")
                                    .Fixed(true)
                                    .FixedPosition(HorizontalEdge.Right)
                                    .Type(GridCommandColumnType.Buttons)
                                    .Buttons(b =>
                                    {
                                        b.Add()
                                            .Name("btnEditar")
                                            .Hint("Editar")
                                            .Icon("edit")
                                            .OnClick("editaEmpleado");
                                    });

                            })
                            .Paging(paging => paging.PageSize(10))
                            .Pager(pager =>
                            {
                                pager.ShowPageSizeSelector(true);
                                pager.AllowedPageSizes(new[] { 10, 20, 30, 40, 50 });
                                pager.ShowInfo(true);
                                pager.InfoText("Página {0} de {1} ( {2} Registros )");
                            })
                )
            </div>
        </div>
    </div>
</div>

<script src="~/Areas/RH/Ingreso/Views/Empleados/ListadoEmpleados.js"></script>